{% set name = "MonkeyType" %}
{% set version = "20.4.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - folder: dist
    url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
    sha256: ff04b25f2b0c8003ef000490edba97c79cc2fdb4f51cfabf3053bf8f03f2cf0a
  - folder: src
    url: https://github.com/Instagram/{{ name }}/archive/v{{ version }}.tar.gz
    sha256: e93ee78b1b2d2c361df5b010d7b895136bf3d64920eff1988be740a457753d4f

build:
  number: 0
  noarch: python
  entry_points:
    - monkeytype=monkeytype.cli:entry_point_main
  script: cd dist && python -m pip install --no-deps --ignore-installed .

requirements:
  build:
    - pip
    - python >=3.6
  run:
    - libcst
    - mypy_extensions
    - python >=3.6

test:
  source_files:
    - src/tests
  requires:
    - {{ compiler('c') }}
    - cython
    - django
    - pip
    - pytest
  imports:
    - monkeytype
  commands:
    - python -m pip check
    - monkeytype --help
    - cd src && cd tests
    - python -m pytest -k "not test_includes_otherwise"


about:
  home: https://github.com/Instagram/MonkeyType
  license: BSD-3-Clause
  license_family: BSD
  license_file: src/LICENSE
  summary: Generating type annotations from sampled production types
  doc_url: https://monkeytype.readthedocs.io
  doc_source_url: https://github.com/Instagram/MonkeyType/tree/master/doc
  description: |
    MonkeyType collects runtime types of function arguments and return values,
    and can automatically generate stub files or even add draft type
    annotations directly to your Python code based on the types collected at
    runtime.

extra:
  recipe-maintainers:
    - bollwyvl
    - nehaljwani
